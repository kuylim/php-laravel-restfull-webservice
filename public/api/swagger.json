{
    "swagger": "2.0",
    "info": {
        "title": "Online Shopper",
        "contact": {
            "name": "E4 Class G17 Group ?",
            "url": "https://www.kuylim.wordpress.com"
        },
        "version": "1.0"
    },
    "host": "online-shop.com",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "paths": {
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Display a listing of the resource.",
                "description": "Return all categories",
                "operationId": "findAllCategories",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Category Not Found"
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "description": "Add a new category.",
                "operationId": "addCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "body",
                        "description": "Category to add to the Database",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save Category Success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "description": "Returns a categories based on a single ID",
                "operationId": "findCategoryById",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/html",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category found"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "description": "Update old category.",
                "operationId": "updateCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "category",
                        "in": "body",
                        "description": "Category to update to the database",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save Category Success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "description": "deletes a single category based on the category id",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category deleted success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/categories/search/{name}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "description": "Returns a category based on a name",
                "operationId": "findCategoryByName",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/html",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name of category to fetch",
                        "required": true,
                        "type": "String",
                        "format": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category found"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Display a listing of the resource.",
                "description": "Return all products",
                "operationId": "finadAllProduct",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Product Not Found"
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "description": "Add a new product.",
                "operationId": "addProduct",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "product",
                        "in": "body",
                        "description": "Product to add to the Database",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save Product Success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "description": "Returns a product based on a single ID",
                "operationId": "findProductById",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/html",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product found"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "description": "Update old product.",
                "operationId": "updateProduct",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Product to update to the database",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save Product Success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "description": "deletes a single product based on the product id",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product deleted success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/products/search/{name}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "description": "Returns a product based on a name",
                "operationId": "findProductByName",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/html",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name of product to fetch",
                        "required": true,
                        "type": "String",
                        "format": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product found"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display a listing of the resource.",
                "description": "Return all users",
                "operationId": "finadAllUser",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User found"
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Creates a new user.",
                "operationId": "addUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User to add to the Database",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save User Success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Returns a user based on a single ID",
                "operationId": "findUserByID",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/html",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user found"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "Update a old user.",
                "operationId": "updateProduct",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User to update to the database",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save User Success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "deletes a single user based on the user id",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user deleted success"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/users/search/{email}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Returns a user based on a email",
                "operationId": "findUserByEmail",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/html",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email of user to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user found"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "description": "Class ApiController",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "Class ApiController",
                    "type": "string"
                }
            }
        },
        "User": {}
    }
}